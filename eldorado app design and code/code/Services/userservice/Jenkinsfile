
pipeline {
    agent any

	tools {
        maven 'mvn'
        jdk 'jdk11'
    }

    environment { 
       
        registryCredential = 'dockerhub_id' 
        dockerImage = '' 
        BRANCH_NAME = env.GIT_BRANCH.replace('product-phase/', '')
		registry = "eldorado/user-img:latest" 
    }

    stages {
	
	stage('compile')
	{
	   steps{
           echo env.GIT_BRANCH
	       sh '''cd Services/userservice 
		   mvn compile'''	
	}
	}
	
	stage('test')
	{
		steps{
			sh '''
			cd Services/userservice 
			mvn install
			'''
		}
	}

	stage('install') {
		steps {
			sh '''cd Services/userservice 
				mvn install'''	
		}
	}
	
	stage('Testing Code coverage')
	{
		steps{
			dir('Services/userservice')
			{
			jacoco( execPattern: 'target/*.exec',classPattern: 'target/classes', sourcePattern: 'src/main/java', exclusionPattern: 'src/test*')
			}
		}
	}



	stage('SonarQube Analysis')
	{
		steps{
			withSonarQubeEnv('sonarqube') {
				sh '''
				cd Services/userservice 
				mvn sonar:sonar
				'''
			}
		}
	}
	

    stage('Building our image') { 
        when {
                anyOf {
                    branch 'master';
                    branch 'dev';            
                }
        }    
        steps { 
                script { 
                    dir('Services/userservice') {
                    dockerImage = docker.build(registry)
                    }
                }
            } 
        }



	
	}
}